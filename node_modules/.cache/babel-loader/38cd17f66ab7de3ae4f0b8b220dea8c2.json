{"ast":null,"code":"import _defineProperty from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/src/pages/newBadge.js\";\nimport React from 'react';\nimport Navbar from '../components/Navbar';\nimport logo from \"../images/badge-header.svg\";\nimport './styles/badge_new.css';\nimport Badge from '../components/badge';\nimport BadgeForm from '../components/badgeform';\n/*\n\nLevantamiento del estado\n\nLevantar el estado es una técnica de React que pone el estado en una localización\ndonde se le pueda pasar como props a los componentes. Lo ideal es poner el estado en el lugar\nmás cercano a todos los componentes que quieren compartir esa información.\n\nAlgo interesante que le da el nombre a React es su parte de “reactivo” ya que cada vez\nque hay un cambio en el estado o en los props que recibe un componente se vuelve a renderizar\ntodo el componente y todos sus descendientes.\n\n*/\n\nvar BadgeNew =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgeNew, _React$Component);\n\n  function BadgeNew() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BadgeNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BadgeNew)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      form: {\n        firstName: '',\n        lastName: '',\n        twitter: '',\n        jobTitle: '',\n        email: ''\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BadgeNew, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"BadgeNew__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-fluid\",\n        src: logo,\n        alt: \"hero_logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        firstName: this.state.form.firstName,\n        lastName: this.state.form.lastName,\n        twitter: this.state.form.twitter,\n        jobTitle: this.state.form.jobTitle,\n        email: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(BadgeForm, {\n        onChange: this.handleChange,\n        formValues: this.state.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return BadgeNew;\n}(React.Component);\n\nexport default BadgeNew;","map":{"version":3,"sources":["/home/danibella/Desktop/MIS PROYECTOS PERSONALES/APP_REACT/platzi-badges/src/pages/newBadge.js"],"names":["React","Navbar","Badge","BadgeForm","BadgeNew","state","form","firstName","lastName","twitter","jobTitle","email","handleChange","e","setState","target","name","value","logo","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA;;;;;;;;;;;;;;IAcMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,SAAS,EAAE,EADT;AAEFC,QAAAA,QAAQ,EAAE,EAFR;AAGFC,QAAAA,OAAO,EAAE,EAHP;AAIFC,QAAAA,QAAQ,EAAE,EAJR;AAKFC,QAAAA,KAAK,EAAE;AALL;AADF,K;;UAqBRC,Y,GAAe,UAAAC,CAAC,EAAI;AAChB,YAAKC,QAAL,CAAc;AACVR,QAAAA,IAAI,oBACG,MAAKD,KAAL,CAAWC,IADd,sBAECO,CAAC,CAACE,MAAF,CAASC,IAFV,EAEiBH,CAAC,CAACE,MAAF,CAASE,KAF1B;AADM,OAAd;AAMH,K;;;;;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEC,IAAhC;AAAsC,QAAA,GAAG,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAKI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWC,IAAX,CAAgBC,SAAlC;AAA6C,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,QAAvE;AAAiF,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,OAA1G;AAAmH,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,QAA7I;AAAuJ,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KAAzK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKC,YAA1B;AAAwC,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,CALJ,CADJ;AAkBH;;;;EAjDkBN,KAAK,CAACmB,S;;AAoD7B,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport Navbar from '../components/Navbar'\nimport logo from '../images/badge-header.svg'\nimport './styles/badge_new.css'\nimport Badge from '../components/badge'\nimport BadgeForm from '../components/badgeform'\n\n/*\n\nLevantamiento del estado\n\nLevantar el estado es una técnica de React que pone el estado en una localización\ndonde se le pueda pasar como props a los componentes. Lo ideal es poner el estado en el lugar\nmás cercano a todos los componentes que quieren compartir esa información.\n\nAlgo interesante que le da el nombre a React es su parte de “reactivo” ya que cada vez\nque hay un cambio en el estado o en los props que recibe un componente se vuelve a renderizar\ntodo el componente y todos sus descendientes.\n\n*/\n\nclass BadgeNew extends React.Component {\n    state = {\n        form: {\n            firstName: '',\n            lastName: '',\n            twitter: '',\n            jobTitle: '',\n            email: '',\n        }\n    };\n    /*\n    si dejmaos asi nuestro codigo nos daremos cuenta que el form sobrescrbira los inputs que vayamos rellenando\n    osea nos tomara 1 or 1 escribo en el siguiente y me borra la info del input previo para oslucionar este problema\n    podemos hcaer lo siguiente hacer un desglose del state.form anterior y agregar uno nuevo dentro del objeto form\n    handleSubmit = e => {\n        this.setState({\n            form: {\n                [e.target.name]: e.target.value, \n            }\n        })\n    };*/\n\n    handleChange = e => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value,\n            },\n        });\n    };\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <div className='BadgeNew__hero'>\n                    <img className='img-fluid' src={logo} alt='hero_logo' />\n                </div>\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-6'>\n                            <Badge firstName={this.state.form.firstName} lastName={this.state.form.lastName} twitter={this.state.form.twitter} jobTitle={this.state.form.jobTitle} email={this.state.email} />\n                        </div>\n                        <div className='col-6'>\n                            <BadgeForm onChange={this.handleChange} formValues={this.state.form} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BadgeNew;"]},"metadata":{},"sourceType":"module"}